// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_TIMEROSTOAIRSIM_ROS_TO_AIRSIM_H_
#define FLATBUFFERS_GENERATED_TIMEROSTOAIRSIM_ROS_TO_AIRSIM_H_

#include "flatbuffers/flatbuffers.h"

namespace ros_to_airsim {

struct time;

MANUALLY_ALIGNED_STRUCT(4) time FLATBUFFERS_FINAL_CLASS {
 private:
  uint32_t sec_;
  uint32_t nsec_;

 public:
  time() {
    memset(this, 0, sizeof(time));
  }
  time(uint32_t _sec, uint32_t _nsec)
      : sec_(flatbuffers::EndianScalar(_sec)),
        nsec_(flatbuffers::EndianScalar(_nsec)) {
  }
  uint32_t sec() const {
    return flatbuffers::EndianScalar(sec_);
  }
  uint32_t nsec() const {
    return flatbuffers::EndianScalar(nsec_);
  }
};
STRUCT_END(time, 8);

}  // namespace ros_to_airsim

#endif  // FLATBUFFERS_GENERATED_TIMEROSTOAIRSIM_ROS_TO_AIRSIM_H_
