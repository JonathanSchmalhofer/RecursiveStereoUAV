// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_ORIENTATIONRPY_AIRSIM_TO_ROS_H_
#define FLATBUFFERS_GENERATED_ORIENTATIONRPY_AIRSIM_TO_ROS_H_

#include "flatbuffers/flatbuffers.h"

namespace airsim_to_ros {

struct OrientationRPY;

MANUALLY_ALIGNED_STRUCT(8) OrientationRPY FLATBUFFERS_FINAL_CLASS {
 private:
  double roll_;
  double pitch_;
  double yaw_;

 public:
  OrientationRPY() {
    memset(this, 0, sizeof(OrientationRPY));
  }
  OrientationRPY(double _roll, double _pitch, double _yaw)
      : roll_(flatbuffers::EndianScalar(_roll)),
        pitch_(flatbuffers::EndianScalar(_pitch)),
        yaw_(flatbuffers::EndianScalar(_yaw)) {
  }
  double roll() const {
    return flatbuffers::EndianScalar(roll_);
  }
  double pitch() const {
    return flatbuffers::EndianScalar(pitch_);
  }
  double yaw() const {
    return flatbuffers::EndianScalar(yaw_);
  }
};
STRUCT_END(OrientationRPY, 24);

}  // namespace airsim_to_ros

#endif  // FLATBUFFERS_GENERATED_ORIENTATIONRPY_AIRSIM_TO_ROS_H_
